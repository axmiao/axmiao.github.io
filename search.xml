<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[JS基础:基本类型与引用类型]]></title>
      <url>%2FJS%E5%9F%BA%E7%A1%80-%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B.html</url>
      <content type="text"><![CDATA[基础类型 数据类型: undefined, null, boolean, string, number 特征: 基本类型的值是不可变的, 不可拓展的 基本类型的变量是以键值对的形式存储于栈内存之中 引用类型 特征: 值可变, 可拓展, 如对象 存储: 引用类型的值同时保存在栈内存与堆内存之中, 栈内存保存该对象在堆内存中的地址 赋值赋值在某种意义上来说就是栈内存的值传递 基本类型 1234567var a = 1;var b = a;console.log(a); // 1console.log(b); // 1b++;console.log(a); // 1console.log(b); // 2 由于基本类型的值直接存储在栈内存中，所以变量a, b分别拥有了一个栈内存值, 改变b的值时, 不会对a产生影响 引用类型 123456var a = &#123;&#125;;var b = a;console.log(a); // &#123;&#125;console.log(b); // &#123;&#125;b.test = 1;console.log(a.test); // 1 这里a的值存储在堆内存之中, 当赋值于b时, 是栈内存赋值, 将a的存储地址传递给了b, 此时a b指向同一堆内存地址, 必然二者的值同时改变]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[前言]]></title>
      <url>%2F%E5%89%8D%E8%A8%80.html</url>
      <content type="text"><![CDATA[毕业大办个月，距离去年7月开始正式学习前端也恰好一年，这个博客也该开始写点什么了。 不得不说最近两年前端发展的速度真的是非常迅猛，ES5飙升至ES8，jQuery好像也成了”上古时代”的前端库，各种框架以及周边插件层出不穷，语言层面也有部分公司在普及TypeScript，Node.js理所当然地成了”合格的前端工程师”的标配。 2016以及2017年入行的新人，一方面需要打牢固基础，另一方面又需要跟上前端发展的速度，算是一个比较尴尬的入行时间节点了。在这种大前提下，部分新人包括我在内会先选择追新，比如Vue或React全家桶学习起来、TypeScript也尝尝鲜等等。 前有”切图仔”后有”库Boy”，一年了大概也能在业务中以及与其他资深前端的对比中知道自己真正需要加强的是什么了，还是基础，牢靠的基础。沉淀一下，入门时都是通过文档和视频，接下来打算过一遍基础，顺便在博客更些读书笔记。]]></content>
    </entry>

    
  
  
</search>
